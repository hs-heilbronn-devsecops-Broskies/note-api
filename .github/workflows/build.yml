# name: Build

# on: workflow_call

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write
#     steps:
#       - name: Check out code
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0

#       - name: Set up environment variable for Docker tag
#         run: |
#           lowercase_repo=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
#           echo "lowercase_repo=$lowercase_repo" >> $GITHUB_ENV
#           echo "lowercase_repo=$lowercase_repo" # Debug output to verify value

#       - name: Log in to GitHub Container Registry
#         uses: docker/login-action@v3
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       - name: Build Docker image
#         run: docker build . --tag ghcr.io/${{ env.lowercase_repo }}:latest

#       - name: Push Docker image
#         run: docker push ghcr.io/${{ env.lowercase_repo }}:latest

#       - run: echo "🐳 Docker image built and pushed to GitHub Container Registry"


# name: Build and Deploy to Cloud Run

# on: workflow_call

# env:
#   PROJECT_ID: hs-heilbronn-devsecops
#   REGION: europe-west3
#   SERVICE: note-api-hs-heilbronn-devsecops-broskies
#   WORKLOAD_IDENTITY_PROVIDER: 'projects/70756149774/locations/global/workloadIdentityPools/github-actions/providers/github-repos'
#   SERVICE_ACCOUNT: 'hshn-devsecops-service-account@hs-heilbronn-devsecops.iam.gserviceaccount.com'

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     permissions:
#       contents: read
#       packages: write
#       id-token: write

#     steps:
#       # Step 1: Check out code
#       - name: Checkout Code
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0

#       # Step 2: Set up environment variable for Docker tag
#       - name: Set up Environment Variables
#         run: |
#           lowercase_repo=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
#           echo "lowercase_repo=$lowercase_repo" >> $GITHUB_ENV

#       # Step 3: Log in to GitHub Container Registry
#       - name: Log in to GitHub Container Registry
#         uses: docker/login-action@v3
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       # Step 4: Build Docker image
#       - name: Build Docker Image
#         run: docker build . --tag ghcr.io/${{ env.lowercase_repo }}:latest

#       # Step 5: Push Docker image
#       - name: Push Docker Image
#         run: docker push ghcr.io/${{ env.lowercase_repo }}:latest

#       # Step 6: Authenticate with Google Cloud
#       - name: Authenticate with Google Cloud
#         uses: google-github-actions/auth@v2
#         with:
#           workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
#           service_account: ${{ env.SERVICE_ACCOUNT }}

#       # Step 7: Set up Docker credentials for GCP
#       - name: Configure Docker for GCP
#         run: gcloud auth configure-docker

#       # Step 8: Deploy to Cloud Run
#       - name: Deploy to Cloud Run
#         uses: google-github-actions/deploy-cloudrun@v2
#         with:
#           service: ${{ env.SERVICE }}
#           image: 'ghcr.io/${{ env.lowercase_repo }}:latest'
#           region: ${{ env.REGION }}
#           env_vars: BACKEND=memory
          
      

name: Build and Deploy to Cloud Run

on: workflow_call

env:
  PROJECT_ID: hs-heilbronn-devsecops
  REGION: europe-west3
  SERVICE: note-api-hs-heilbronn-devsecops-broskies
  WORKLOAD_IDENTITY_PROVIDER: 'projects/70756149774/locations/global/workloadIdentityPools/github-actions/providers/github-repos'
  SERVICE_ACCOUNT: 'hshn-devsecops-service-account@hs-heilbronn-devsecops.iam.gserviceaccount.com'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}

      - name: Authenticate Docker to Artifact Registry
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Build and Push Docker Container
        run: |
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" .
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
          env_vars: BACKEND=memory

          
      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}