name: CI - Code Verification, Tests, and Quality Check

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: echo "‚úÖ Checked out code from the repository"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: echo "üêç Python ${{ matrix.python-version }} setup completed"

      - name: Install dependencies
        run: |
          echo "üì¶ Installing dependencies..."
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install pytest pytest-xdist pytest-cov
          echo "‚úÖ Dependencies installed successfully"

      - name: Run tests with coverage in parallel
        run: |
          echo "üß™ Running tests with pytest and generating coverage report..."
          pytest --cov=note_api --cov-report=term-missing -n auto
          echo "‚úÖ Test run completed with coverage report"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: echo "‚úÖ Coverage report submitted to Codecov"

  snyk_analysis:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Specify Python version
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Snyk analysis
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif

      - run: echo "üîç Security scan completed with Snyk"

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

          
  build:
    runs-on: ubuntu-latest
    needs: [test, snyk_analysis]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0


      - name: Set up environment variable for Docker tag
        run: |
          lowercase_repo=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "lowercase_repo=$lowercase_repo" >> $GITHUB_ENV
          echo "lowercase_repo=$lowercase_repo" # Debug output to verify value

          
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      
      - name: Build Docker image
        run: docker build . --tag ghcr.io/${{ env.lowercase_repo }}:latest
      
      - name: Push Docker image
        run: docker push ghcr.io/${{ env.lowercase_repo }}:latest
      
      - run: echo "üê≥ Docker image built and pushed to GitHub Container Registry"

